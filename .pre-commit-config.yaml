# Pre-commit configuration
# See https://pre-commit.com for more information

default_language_version:
  python: python3.11

repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^.*\.(md|markdown)$
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: name-tests-test
        args: ['--pytest-test-first']
      - id: requirements-txt-fixer
      - id: fix-byte-order-marker
      - id: check-docstring-first
      - id: check-ast
      - id: check-builtin-literals

  # Python code formatting - Black
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3.11
        args: ['--line-length=88']
        exclude: migrations/

  # Python import sorting - isort
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.0
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '88']
        exclude: migrations/

  # Python code linting - Flake8
  - repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503']
        additional_dependencies:
          - flake8-bugbear==23.12.2
          - flake8-comprehensions==3.14.0
          - flake8-docstrings==1.7.0
        exclude: migrations/

  # Python type checking - MyPy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        args: ['--ignore-missing-imports', '--strict']
        additional_dependencies:
          - 'pydantic>=2.5.0'
          - 'types-requests'
          - 'types-redis'
        exclude: migrations/

  # Python security linting - Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: tests/

  # Python docstring formatting
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=google']
        exclude: 'migrations/|tests/'

  # Python upgrade syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: ['--py311-plus']

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types: [yaml]
        exclude: '^(.*\.ya?ml|docker-compose.*\.yml)$'

  # Markdown formatting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: ['--fix']

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Local hooks
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: ['tests/', '--tb=short', '-v']
        stages: [push]

      - id: export-requirements
        name: Export requirements
        entry: bash -c 'poetry export -f requirements.txt --output requirements.txt --without-hashes'
        language: system
        pass_filenames: false
        files: pyproject.toml

# Configuration for specific hooks
files: ^src/
exclude: |
  (?x)^(
    .*\.egg-info/|
    \.git/|
    \.mypy_cache/|
    \.pytest_cache/|
    \.tox/|
    __pycache__/|
    build/|
    dist/|
    docs/_build/|
    htmlcov/|
    migrations/|
    node_modules/|
    venv/|
    \.env
  )

# Don't run on CI
ci:
  skip: [mypy, pytest-check]
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  submodules: false
